//require CodeRAD
//require RADChatRoom
package com.codename1.samples;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.rad.controllers.ApplicationController;
import com.codename1.rad.controllers.Controller;
import com.codename1.rad.controllers.FormController;
import com.codename1.rad.models.Entity;
import com.codename1.rad.models.EntityList;
import com.codename1.rad.models.EntityType;
import com.codename1.rad.nodes.ActionNode;
import com.codename1.rad.nodes.ViewNode;
import com.codename1.rad.schemas.ChatMessage;
import com.codename1.rad.schemas.ChatRoom;
import static com.codename1.rad.ui.UI.action;
import static com.codename1.rad.ui.UI.actions;
import static com.codename1.rad.ui.UI.enabledCondition;
import static com.codename1.rad.ui.UI.icon;
import com.codename1.rad.ui.chatroom.ChatRoomView;
import com.codename1.ui.FontImage;
import com.codename1.ui.layouts.BorderLayout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class RADChatRoomTest3 extends ApplicationController {
    public static final ActionNode send = action(
        enabledCondition(entity-> {
            return !entity.isEmpty(ChatRoom.inputBuffer);
        }),
        icon(FontImage.MATERIAL_SEND)
    );

    @Override
    public void start() {
        super.start();
        new ChatFormController(this).show();
        
    }

    
    static class ViewModel extends Entity {
        public static final EntityType TYPE = new EntityType(){{
            string(ChatRoom.inputBuffer);
            list(EntityList.class, ChatRoom.messages);
        }};
        {
            setEntityType(TYPE);
            set(ChatRoom.messages, new EntityList(MessageModel.TYPE, -1));
        }
    }
    
    static class MessageModel extends Entity {
        public static final EntityType TYPE = new EntityType(){{
            string(ChatMessage.text);
        }};
        {
            setEntityType(TYPE);
        }
                
              
        
    }
    
    static class ChatFormController extends FormController {
        
        public ChatFormController(Controller parent) {
            super(parent);
            Form f = new Form("Chat Room", new BorderLayout());
            ChatRoomView chatView = new ChatRoomView(new ViewModel(), createViewNode(), f);
            f.add(CENTER, chatView);
            setView(f);
            
            addActionListener(send, evt->{
                MessageModel msg = new MessageModel();
                msg.set(ChatMessage.text, evt.getEntity().getText(ChatRoom.inputBuffer));
                evt.getEntity().getEntityList(ChatRoom.messages).add(msg);
            });
            
        }

        @Override
        protected ViewNode createViewNode() {
            return new ViewNode(actions(ChatRoomView.SEND_ACTION, send));
        }
        
        

    }

}
